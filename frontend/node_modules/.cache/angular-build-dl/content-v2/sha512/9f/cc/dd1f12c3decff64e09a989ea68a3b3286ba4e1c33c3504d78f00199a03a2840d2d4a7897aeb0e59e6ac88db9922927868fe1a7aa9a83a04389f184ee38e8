{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/add-visit/add-visit.component.html","./src/app/components/header/header.component.html","./src/app/components/home/home.component.html","./src/app/components/login/login.component.html","./src/app/components/registration/registration.component.html","./src/app/components/update-visit/update-visit.component.html","./src/app/components/user-account/user-account.component.html","./src/app/components/visit-details/visit-details.component.html","./src/app/shared/modal/common-modal/common-modal.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/add-visit/add-visit.component.css","./src/app/components/add-visit/add-visit.component.ts","./src/app/components/header/header.component.css","./src/app/components/header/header.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.ts","./src/app/components/registration/registration.component.css","./src/app/components/registration/registration.component.ts","./src/app/components/update-visit/update-visit.component.css","./src/app/components/update-visit/update-visit.component.ts","./src/app/components/user-account/user-account.component.css","./src/app/components/user-account/user-account.component.ts","./src/app/components/visit-details/visit-details.component.css","./src/app/components/visit-details/visit-details.component.ts","./src/app/services/address/address.service.ts","./src/app/services/doctor/doctor.service.ts","./src/app/services/error-interceptor/http-error.interceptor.ts","./src/app/services/modal/modal.service.ts","./src/app/services/navbar/navbar.service.ts","./src/app/services/notifier/my-notifier.service.ts","./src/app/services/oauth/oauth.service.ts","./src/app/services/token-interceptor/token.interceptor.ts","./src/app/services/user/user.service.ts","./src/app/services/visit/visit.service.ts","./src/app/shared/directives/checked.directive.ts","./src/app/shared/modal/common-modal/common-modal.component.css","./src/app/shared/modal/common-modal/common-modal.component.ts","./src/app/shared/models/address.model.ts","./src/app/shared/models/doctor.model.ts","./src/app/shared/models/user.model.ts","./src/app/shared/models/visit.model.ts","./src/app/shared/utils/passwordMatcher.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\"","export default \"<!-- Modal -->\\r\\n<div #childModal class=\\\"modal fade bd-example-modal-lg\\\" id=\\\"addVisit\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myExtraLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-xl\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <!-- Modal Header -->\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">\\r\\n                    Add Appointment\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    <span class=\\\"sr-only\\\">Close</span>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- Modal Body -->\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <div class=\\\"form\\\" id=\\\"myform\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label class=\\\"font-weight-bold\\\" for=\\\"exampleInputPassword1\\\">Choose a Docotr</label>\\r\\n                            <div class=\\\"input-group mb-3\\\">\\r\\n                                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect02\\\" [(ngModel)]=\\\"visit.doctorDTO\\\">\\r\\n                                    <option class=\\\"dropdown-item\\\" selected value=\\\"undefined\\\">Select an Option</option>\\r\\n                                    <!-- <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">Select an Option</option> -->\\r\\n                                    <option *ngFor=\\\"let doctor of doctors\\\" [ngValue]=\\\"doctor\\\"> {{doctor.name}}\\r\\n                                        {{doctor.surname}} - {{doctor.specialization}} </option>\\r\\n                                </select>\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect02\\\">Options</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label class=\\\"font-weight-bold\\\" for=\\\"exampleInputPassword1\\\">Appointment date</label>\\r\\n                            <div>\\r\\n                                <mat-form-field>\\r\\n                                    <mat-label>Choose a Date</mat-label>\\r\\n                                    <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"visitDate\\\">\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #picker></mat-datepicker>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"font-weight-bold\\\" for=\\\"exampleInputPassword1\\\">Choose an hour</label>\\r\\n                                <div class=\\\"input-group mb-3\\\">\\r\\n                                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect02\\\" [(ngModel)]=\\\"visit.visitHour\\\">\\r\\n                                        <option class=\\\"dropdown-item\\\" selected value=\\\"undefined\\\">Select an Option\\r\\n                                        </option>\\r\\n                                        <option *ngFor=\\\"let hour of visitHour\\\" [value]=\\\"hour.hour\\\"> {{hour.hour}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect02\\\">Options</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <!-- Modal Footer -->\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\r\\n                    Close\\r\\n                </button>\\r\\n                <button type=\\\"submit\\\" form=\\\"myform\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addVisitButton()\\\"\\r\\n                    data-dismiss=\\\"modal\\\">\\r\\n                    Save changes\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">OneMiVisit</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\" *ngFor=\\\"let link of links\\\">\\r\\n        <div>\\r\\n          <a [attr.data-toggle]=\\\"link.path === 'addVisit' ? 'modal': null\\\"\\r\\n            [attr.data-target]=\\\"link.path === 'addVisit' ? '#addVisit': null\\\" class=\\\"nav-link\\\"\\r\\n            [routerLink]=\\\"link.path\\\">{{ link.text }}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"isLoggedIn\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\"\\r\\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <i class=\\\"fas fa-user\\\"></i> {{user.name}} </a>\\r\\n        <div class=\\\"dropdown-menu dropdown-menu-right dropdown-info\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n          <a class=\\\"dropdown-item text-dark\\\" routerLink=\\\"myAccount\\\">My account</a>\\r\\n          <a class=\\\"dropdown-item text-dark\\\" routerLink=\\\"login\\\" (click)=\\\"logout()\\\">Log out</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","export default \"<notifier-container></notifier-container>\\r\\n<div class=\\\"container\\\">\\r\\n  <div *ngIf=\\\"visitsForUser.length >0; then visitList else noVisit\\\"></div>\\r\\n\\r\\n  <ng-template #noVisit>\\r\\n    <h3 class=\\\"text-center\\\">No appointments - Add your firs appointment.</h3>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #visitList>\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">No.</th>\\r\\n          <th scope=\\\"col\\\">Appointment Date</th>\\r\\n          <th scope=\\\"col\\\">Appointment Hour</th>\\r\\n          <th scope=\\\"col\\\">Doctor</th>\\r\\n          <th scope=\\\"col\\\">Action</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let visit of visitsForUser ; let i = index\\\">\\r\\n          <td> {{ i + 1}} </td>\\r\\n          <td> {{visit.visitDate | date}} </td>\\r\\n          <td> {{visit.visitHour}} </td>\\r\\n          <td> {{visit.doctorDTO.name}} {{visit.doctorDTO.surname}} </td>\\r\\n          <td>\\r\\n            <!-- <img src=\\\"assets/img/myimage.png\\\"> -->\\r\\n            <button id=\\\"buttonMargin\\\" class=\\\"btn btn-warning\\\" (click)=\\\"visitDetails.openVisitDetails(visit)\\\"\\r\\n              data-toggle=\\\"modal\\\" data-target=\\\"#visitDetails\\\">More</button>\\r\\n            <button id=\\\"buttonMargin\\\" class=\\\"btn btn-warning\\\" (click)=\\\"updateVisit.updateVisit(visit)\\\"\\r\\n              data-toggle=\\\"modal\\\" data-target=\\\"#updateVisit\\\">Update</button>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteVisitClick(visit.id)\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </ng-template>\\r\\n\\r\\n</div>\\r\\n\\r\\n<app-visit-details #visitDetails></app-visit-details>\\r\\n<app-add-visit #addVisit></app-add-visit>\\r\\n<app-update-visit #updateVisit></app-update-visit>\\r\\n<app-common-modal id=\\\"confirm-modal\\\">\\r\\n  <h1>Confirm!</h1>\\r\\n  <p>Are you sure want to delete?</p>\\r\\n  <button class=\\\"btn btn-danger buttonProp\\\" (click)=\\\"closeModal($event)\\\" id=\\\"yes\\\">Yes</button>\\r\\n  <button class=\\\"btn btn-warning\\\" (click)=\\\"closeModal($event)\\\" id=\\\"cancel\\\">Cancel</button>\\r\\n</app-common-modal>\"","export default \"<notifier-container></notifier-container>\\r\\n<div class=\\\"login-form\\\">\\r\\n    <form [formGroup]=\\\"validateForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <h2 class=\\\"text-center\\\">Sign in</h2>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"pesel\\\" maxlength=\\\"11\\\" class=\\\"form-control\\\" id=\\\"pesel\\\"\\r\\n                placeholder=\\\"Pesel\\\" required=\\\"required\\\"\\r\\n                [ngClass]=\\\"getClass((submitted && fields.pesel.errors),fields.pesel)\\\">\\r\\n            <div *ngIf=\\\"submitted && fields.pesel.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"fields.pesel.errors.required\\\">Pesel number is required</div>\\r\\n                <div *ngIf=\\\"fields.pesel.errors.minlength\\\">Pesel must have a 11 digitals</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n                required=\\\"required\\\" [ngClass]=\\\"getClass((submitted && fields.password.errors),fields.password)\\\">\\r\\n            <div *ngIf=\\\"submitted && fields.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"fields.password.errors.required\\\">Password is required</div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"oauthError != null\\\" class=\\\"text-danger text-center font-weight-bold\\\"> {{oauthError}} </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\">Sign in</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\">\\r\\n            <a href=\\\"#\\\" class=\\\"pull-right\\\">Forgot Password?</a>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","export default \"<notifier-container></notifier-container>\\r\\n\\r\\n<br />\\r\\n<h3 class=\\\"text-center\\\">Create your account</h3>\\r\\n<br />\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n    <form [formGroup]=\\\"validateForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label for=\\\"name\\\">Name</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter name\\\"\\r\\n                    [(ngModel)]=\\\"user.name\\\" [ngClass]=\\\"getClass((submitted && fields.name.errors),fields.name)\\\">\\r\\n                <div *ngIf=\\\"submitted && fields.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"fields.name.errors.required\\\">First Name is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <label for=\\\"surname\\\">Surname</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"surname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter surname\\\"\\r\\n                    [(ngModel)]=\\\"user.surname\\\"\\r\\n                    [ngClass]=\\\"getClass((submitted && fields.surname.errors),fields.surname)\\\">\\r\\n                <div *ngIf=\\\"submitted && fields.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"fields.surname.errors.required\\\">Last Name is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label for=\\\"pesel\\\">Pesel Number</label>\\r\\n                <input type=\\\"text\\\" maxlength=\\\"11\\\" [pattern]=\\\"peselPattern\\\" formControlName=\\\"pesel\\\" class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"Enter pesel number\\\" [(ngModel)]=\\\"user.pesel\\\"\\r\\n                    [ngClass]=\\\"getClass((submitted && fields.pesel.errors), fields.pesel)\\\">\\r\\n                <div *ngIf=\\\"fields.pesel.errors?.serverError\\\" class=\\\"invalid-feedback\\\"> {{error}} </div>\\r\\n                <div *ngIf=\\\"submitted && fields.pesel.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"fields.pesel.errors.required\\\">Pesel number is required</div>\\r\\n                    <div *ngIf=\\\"fields.pesel.errors.minlength\\\">Pesel must have a 11 digitals</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <label for=\\\"phone\\\">Phone number</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" placeholder=\\\"Enter phone number\\\"\\r\\n                    [(ngModel)]=\\\"user.phoneNumber\\\"\\r\\n                    [ngClass]=\\\"getClass((submitted && fields.phone.errors),fields.phone)\\\">\\r\\n                <div *ngIf=\\\"submitted && fields.phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"fields.phone.errors.required\\\">Phone number is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Email address</label>\\r\\n            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\"\\r\\n                [(ngModel)]=\\\"user.email\\\" [ngClass]=\\\"getClass((submitted && fields.email.errors),fields.email)\\\">\\r\\n            <div *ngIf=\\\"submitted && fields.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"fields.email.errors.required\\\">Email is required</div>\\r\\n                <div *ngIf=\\\"fields.email.errors.email\\\">Email must be a valid email address</div>\\r\\n            </div>\\r\\n            <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"\\r\\n                [(ngModel)]=\\\"user.password\\\" [ngClass]=\\\"getClass((submitted && fields.password.errors),fields.password)\\\">\\r\\n            <div *ngIf=\\\"submitted && fields.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"fields.password.errors.required\\\">Password is required</div>\\r\\n                <div *ngIf=\\\"fields.password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"confirmPassword\\\">Confirm Password</label>\\r\\n            <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"\\r\\n                [(ngModel)]=\\\"confirmPass\\\"\\r\\n                [ngClass]=\\\"getClass((submitted && fields.confirmPassword.errors),fields.confirmPassword)\\\">\\r\\n            <div *ngIf=\\\"submitted && fields.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"fields.confirmPassword.errors.required\\\">Password is required</div>\\r\\n                <div *ngIf=\\\"fields.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\">Register</button>\\r\\n    </form>\\r\\n</div>\"","export default \"<!-- Modal -->\\r\\n<div class=\\\"modal fade bd-example-modal-lg\\\" id=\\\"updateVisit\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myExtraLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-xl\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <!-- Modal Header -->\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">\\r\\n                    Modify Appointment\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    <span class=\\\"sr-only\\\">Close</span>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- Modal Body -->\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form\\\" id=\\\"myform\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label class=\\\"font-weight-bold\\\" for=\\\"exampleInputPassword1\\\">Change doctor</label>\\r\\n                            <form [formGroup]=\\\"form\\\" class=\\\"input-group mb-3\\\">\\r\\n                                <select class=\\\"custom-select\\\" id=\\\"doctorOption\\\" [compareWith]=\\\"compareFn\\\"\\r\\n                                    formControlName=\\\"doctor\\\">\\r\\n                                    <option *ngFor=\\\"let doctor of doctors\\\" [ngValue]=\\\"doctor\\\"\\r\\n                                        [ngClass]=\\\"(doctor.id === actualDoctorId) ? 'greenText':'null'\\\">\\r\\n                                        {{doctor?.name}} {{doctor?.surname}} - {{doctor?.specialization}} </option>\\r\\n                                </select>\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <label class=\\\"input-group-text\\\" for=\\\"doctorOption\\\">Options</label>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label class=\\\"font-weight-bold\\\" for=\\\"exampleInputPassword1\\\">Change appointment date</label>\\r\\n                            <div>\\r\\n                                <mat-form-field>\\r\\n                                    <mat-label>Choose a Date</mat-label>\\r\\n                                    <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"visitDate\\\">\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #picker [startAt]=\\\"visitDate\\\"></mat-datepicker>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"font-weight-bold\\\" for=\\\"exampleInputPassword1\\\">Change appointment\\r\\n                                    hour</label>\\r\\n                                <div class=\\\"input-group mb-3\\\">\\r\\n                                    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect02\\\"\\r\\n                                        [(ngModel)]=\\\"visitObj.visitHour\\\">\\r\\n                                        <option *ngFor=\\\"let hour of visitHour\\\"\\r\\n                                            [selected]=\\\"hour.hour === visitObj.visitHour\\\" [value]=\\\"hour.hour\\\"\\r\\n                                            [ngClass]=\\\"(hour.hour === actualHourVisit) ? 'greenText':'null'\\\">\\r\\n                                            {{hour?.hour}} </option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect02\\\">Options</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <p class=\\\"label\\\">*Actual value is marked as green color.</p>\\r\\n            </div>\\r\\n\\r\\n            <!-- Modal Footer -->\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModal()\\\">\\r\\n                    Close\\r\\n                </button>\\r\\n                <button type=\\\"submit\\\" form=\\\"myform\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateVisitForm()\\\"\\r\\n                    data-dismiss=\\\"modal\\\">\\r\\n                    Save changes\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<notifier-container></notifier-container>\\r\\n<div class=\\\"container\\\">\\r\\n    <br />\\r\\n    <h3 class=\\\"text-center\\\">My account</h3>\\r\\n    <br />\\r\\n    <h5>Personal details</h5>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n        <form autocomplete=\\\"off\\\" [formGroup]=\\\"validateForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"nameInfo\\\">Name</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"nameInfo\\\" class=\\\"form-control\\\" placeholder=\\\"Enter name\\\"\\r\\n                        [(ngModel)]=\\\"user.name\\\" [ngClass]=\\\"{ 'is-invalid':submitted && fields.nameInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validUserFields[0].checked\\\">\\r\\n                        {{usserCoppied?.name}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.nameInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.nameInfo.errors.required\\\">First Name is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"surnameInfo\\\">Surname</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"surnameInfo\\\" class=\\\"form-control\\\" placeholder=\\\"Enter surname\\\"\\r\\n                        [(ngModel)]=\\\"user.surname\\\" [ngClass]=\\\"{ 'is-invalid':submitted && fields.surnameInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validUserFields[1].checked\\\">\\r\\n                        {{usserCoppied?.surname}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.surnameInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.surnameInfo.errors.required\\\">Last Name is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"peselInfo\\\">Pesel Number</label>\\r\\n                    <input type=\\\"text\\\" maxlength=\\\"11\\\" formControlName=\\\"peselInfo\\\" class=\\\"form-control\\\"\\r\\n                        placeholder=\\\"Enter pesel number\\\" [(ngModel)]=\\\"user.pesel\\\"\\r\\n                        [ngClass]=\\\"{ 'is-invalid':submitted && fields.peselInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validUserFields[2].checked\\\">\\r\\n                        {{usserCoppied?.pesel}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"fields.peselInfo.errors?.serverError\\\" class=\\\"invalid-feedback\\\"> blad </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.peselInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.peselInfo.errors.required\\\">Pesel number is required</div>\\r\\n                        <div *ngIf=\\\"fields.peselInfo.errors.minlength\\\">Pesel must have a 11 digitals</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"phoneInfo\\\">Phone number</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"phoneInfo\\\" class=\\\"form-control\\\" placeholder=\\\"Enter phone number\\\"\\r\\n                        [(ngModel)]=\\\"user.phoneNumber\\\" [ngClass]=\\\"{ 'is-invalid':submitted && fields.phoneInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validUserFields[3].checked\\\">\\r\\n                        {{usserCoppied?.phoneNumber}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.phoneInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.phoneInfo.errors.required\\\">Phone number is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"emailInfo\\\">Email address</label>\\r\\n                    <input type=\\\"email\\\" formControlName=\\\"emailInfo\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\"\\r\\n                        [(ngModel)]=\\\"user.email\\\" [ngClass]=\\\"{ 'is-invalid':submitted && fields.emailInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validUserFields[4].checked\\\">\\r\\n                        {{usserCoppied?.email}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.emailInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.emailInfo.errors.required\\\">Email is required</div>\\r\\n                        <div *ngIf=\\\"fields.emailInfo.errors.email\\\">Email must be a valid email address</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"passwordInfo\\\">Password</label>\\r\\n                <input type=\\\"password\\\" formControlName=\\\"passwordInfo\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"\\r\\n                    [(ngModel)]=\\\"user.password\\\" [ngClass]=\\\"{ 'is-invalid':submitted && fields.passwordInfo.errors}\\\"\\r\\n                    (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                <div class=\\\"greenText\\\" [hidden]=\\\"validUserFields[5].checked\\\">\\r\\n                    {{usserCoppied?.password}}\\r\\n                </div>\\r\\n                <div *ngIf=\\\"submitted && fields.passwordInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"fields.passwordInfo.errors.required\\\">Password is required</div>\\r\\n                    <div *ngIf=\\\"fields.passwordInfo.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"name\\\">Street/city</label>\\r\\n                    <input type=\\\"streetInfo\\\" formControlName=\\\"streetInfo\\\" class=\\\"form-control\\\" placeholder=\\\"Street\\\"\\r\\n                        [(ngModel)]=\\\"address.street\\\" [ngClass]=\\\"{ 'is-invalid':submitted && fields.streetInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validAddressFields[0].checked\\\">\\r\\n                        {{addressCopied?.street}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.streetInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.streetInfo.errors.required\\\">Street is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"cityInfo\\\">District office</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"cityInfo\\\" class=\\\"form-control\\\" placeholder=\\\"city\\\"\\r\\n                        [(ngModel)]=\\\"address.city\\\" [ngClass]=\\\"{'is-invalid':submitted && fields.cityInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validAddressFields[1].checked\\\">\\r\\n                        {{addressCopied?.city}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.cityInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.cityInfo.errors.required\\\">District office is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label for=\\\"postalCodeInfo\\\">Postal Code</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"postalCodeInfo\\\" class=\\\"form-control\\\" placeholder=\\\"postalCode\\\"\\r\\n                        [(ngModel)]=\\\"address.postalCode\\\"\\r\\n                        [ngClass]=\\\"{'is-invalid':submitted && fields.postalCodeInfo.errors}\\\"\\r\\n                        (input)=\\\"onSearchChange($event.target)\\\">\\r\\n                    <div class=\\\"greenText\\\" [hidden]=\\\"validAddressFields[2].checked\\\">\\r\\n                        {{addressCopied?.postalCode}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"submitted && fields.postalCodeInfo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fields.postalCodeInfo.errors.required\\\">Postal code is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br />\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\" [disabled]=\\\"isDisabled\\\">Update personal details</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"modal fade\\\" id=\\\"visitDetails\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <!-- Modal Header -->\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    Visit details\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    <span class=\\\"sr-only\\\">Close</span>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- Modal Body -->\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <table class=\\\"table table-borderless\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Registration date:</th>\\r\\n                            <td> {{visit?.registrationDate | date}} </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Vist date:</th>\\r\\n                            <td> {{visit?.visitDate | date}} </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Visit hour:</th>\\r\\n                            <td>{{visit?.visitHour}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Doctor name:</th>\\r\\n                            <td>{{visit?.doctorDTO.name}} {{visit?.doctorDTO.surname}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Specialization:</th>\\r\\n                            <td>{{visit?.doctorDTO.specialization}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Visit room:</th>\\r\\n                            <td>{{visit?.doctorDTO.room}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <!-- Modal Footer -->\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">\\r\\n                    Close\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"app-common-modal\\\">\\r\\n    <div class=\\\"app-common-modal-body text-center\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"app-common-modal-background\\\"></div>\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UserAccountComponent } from './components/user-account/user-account.component';\r\n\r\n\r\nconst routes: Routes=[\r\n    {path: 'registration', component: RegistrationComponent},\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'home', component: HomeComponent},\r\n    {path: 'addVisit', component: HomeComponent},\r\n    {path: 'myAccount', component: UserAccountComponent},\r\n    {path: '', redirectTo :'login',pathMatch: 'full'}\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\nexport const routingComponents = [RegistrationComponent,LoginComponent, HomeComponent] ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\nimport {ActivatedRoute,Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router){\r\n    //this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { HttpErrorInterceptor } from './services/error-interceptor/http-error.interceptor';\r\nimport { NotifierModule } from \"angular-notifier\";\r\nimport { TokenInterceptor } from './services/token-interceptor/token.interceptor';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatRippleModule, MatDatepickerModule, MatNativeDateModule,MatInputModule,MatFormFieldModule  } from '@angular/material';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CheckedDirective } from './shared/directives/checked.directive';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { CommonModalComponent } from './shared/modal/common-modal/common-modal.component';\r\nimport { VisitDetailsModalComponent } from './components/visit-details/visit-details.component';\r\nimport { AddVisitComponent } from './components/add-visit/add-visit.component';\r\nimport { MyNotifierService } from './services/notifier/my-notifier.service';\r\nimport { UpdateVisitComponent } from './components/update-visit/update-visit.component';\r\nimport { UserAccountComponent } from './components/user-account/user-account.component';\r\n\r\nconst MaterialImport =[\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n  MatInputModule,\r\n  MatFormFieldModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    CommonModalComponent,\r\n    CommonModalComponent,\r\n    VisitDetailsModalComponent,\r\n    AddVisitComponent,\r\n    UpdateVisitComponent,\r\n    UserAccountComponent,\r\n    CheckedDirective\r\n  ],\r\n  imports: [\r\n    MaterialImport,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    NotifierModule.withConfig({\r\n      position: {\r\n        vertical: {\r\n          /**\r\n           * Defines the horizontal position on the screen\r\n           * @type {'left' | 'middle' | 'right'}\r\n           */\r\n          position: 'top',\r\n          distance: 60\r\n        }\r\n      }\r\n    }),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, \r\n      useClass: HttpErrorInterceptor, \r\n      multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n    MyNotifierService,\r\n    DatePipe\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".modal-body .form-horizontal .col-sm-2,\\r\\n.modal-body .form-horizontal .col-sm-10 {\\r\\n    width: 100%\\r\\n}\\r\\n\\r\\n.modal-body .form-horizontal .control-label {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.modal-body .form-horizontal .col-sm-offset-2 {\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n::ng-deep .cdk-overlay-container{\\r\\n    z-index: 1200 !important;\\r\\n}\\r\\n\\r\\n.input-group.mb-3 {\\r\\n    margin-top:7px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZGQtdmlzaXQvYWRkLXZpc2l0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUk7QUFDSjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFDQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkZC12aXNpdC9hZGQtdmlzaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC1ib2R5IC5mb3JtLWhvcml6b250YWwgLmNvbC1zbS0yLFxyXG4ubW9kYWwtYm9keSAuZm9ybS1ob3Jpem9udGFsIC5jb2wtc20tMTAge1xyXG4gICAgd2lkdGg6IDEwMCVcclxufVxyXG5cclxuLm1vZGFsLWJvZHkgLmZvcm0taG9yaXpvbnRhbCAuY29udHJvbC1sYWJlbCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbi5tb2RhbC1ib2R5IC5mb3JtLWhvcml6b250YWwgLmNvbC1zbS1vZmZzZXQtMiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG46Om5nLWRlZXAgLmNkay1vdmVybGF5LWNvbnRhaW5lcntcclxuICAgIHotaW5kZXg6IDEyMDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmlucHV0LWdyb3VwLm1iLTMge1xyXG4gICAgbWFyZ2luLXRvcDo3cHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Doctor } from 'src/app/shared/models/doctor.model';\r\nimport { DoctorService } from 'src/app/services/doctor/doctor.service';\r\nimport { Visit } from 'src/app/shared/models/visit.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { VisitService } from 'src/app/services/visit/visit.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { MyNotifierService } from 'src/app/services/notifier/my-notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-add-visit',\r\n  templateUrl: './add-visit.component.html',\r\n  styleUrls: ['./add-visit.component.css']\r\n})\r\nexport class AddVisitComponent implements OnInit {\r\n\r\n  readonly notifier: MyNotifierService;\r\n  protected user: User;\r\n  protected visitHours: Array<String>;\r\n  protected doctors = new Array<Doctor>();\r\n  protected visit = new Visit();\r\n  protected visitDate: string;\r\n  protected visitHour = [\r\n    { hour: \"7.00\" },\r\n    { hour: \"8.30\" },\r\n    { hour: \"9.30\" },\r\n    { hour: \"11.00\" },\r\n    { hour: \"13.00\" }\r\n  ]\r\n\r\n  constructor(private doctorService: DoctorService, private datePipe: DatePipe, private visitService: VisitService,\r\n    private router: Router, private notiferService: MyNotifierService, private userService: UserService) {\r\n    this.notifier = notiferService;\r\n    this.doctorService.getDoctors().subscribe(results => {\r\n      results.forEach(doctor => {\r\n        this.doctors.push(doctor);\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.getLogedUser().subscribe(res => {\r\n      this.user = res;\r\n    });\r\n  }\r\n\r\n  addVisitButton() {\r\n    this.visit.visitDate = this.datePipe.transform(this.visitDate, 'yyyy-MM-dd').toString();\r\n    this.visit.registrationDate = this.datePipe.transform(new Date, 'yyyy-MM-dd').toString();\r\n    this.visit.userDTO = this.user;\r\n    console.log(this.visit.userDTO);\r\n    this.visitService.addVisit(this.visit).subscribe(res => {\r\n      this.router.navigate(['/home']).then(() => {\r\n        this.notifier.showNotifer(\"success\", res.body);\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","export default \"/* .navbar-nav.ml-auto li a{\\r\\n    color: white;\\r\\n} */\\r\\n\\r\\n\\r\\n.dropdown-menu {\\r\\n    background-color: gainsboro;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7OztBQUdIO0lBQ0ksMkJBQTJCO0FBQy9CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAubmF2YmFyLW5hdi5tbC1hdXRvIGxpIGF7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn0gKi9cclxuXHJcblxyXG4uZHJvcGRvd24tbWVudSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnYWluc2Jvcm87XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NavbarService } from 'src/app/services/navbar/navbar.service';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { OauthService } from 'src/app/services/oauth/oauth.service';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { RegistrationComponent } from '../registration/registration.component';\r\nimport { UserAccountComponent } from '../user-account/user-account.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  links: Array<{ text: string, path: string }>;\r\n  isLoggedIn = false;\r\n  protected user: User;\r\n\r\n  constructor(private router: Router, private navbarService: NavbarService, private userService: UserService,private oauthService: OauthService) {\r\n    this.router.config.unshift(\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'register', component: RegistrationComponent },\r\n      { path: 'myAccount', component: UserAccountComponent }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.links = this.navbarService.getLinks();\r\n    this.navbarService.getLoginStatus().subscribe(status => {\r\n      this.isLoggedIn = status;\r\n    });\r\n    this.userService.getLogedUser().subscribe(res => {\r\n      console.log(res);\r\n      this.user = res;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.oauthService.clearToken();\r\n    this.navbarService.updateLoginStatus(false);\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","export default \".container {\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n#buttonMargin {\\r\\n    margin-right: 10px;\\r\\n  }\\r\\n\\r\\n#buttonMargin2 {\\r\\n    margin-right: 100px;\\r\\n    background-color: hotpink;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGtCQUFrQjtFQUNwQjs7QUFFQTtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7RUFDM0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcblxyXG4jYnV0dG9uTWFyZ2luIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICB9XHJcblxyXG4gICNidXR0b25NYXJnaW4yIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBob3RwaW5rO1xyXG4gIH0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { VisitService } from 'src/app/services/visit/visit.service';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { Visit } from 'src/app/shared/models/visit.model';\r\nimport { Doctor } from 'src/app/shared/models/doctor.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ModalService } from 'src/app/services/modal/modal.service';\r\nimport { NavbarService } from 'src/app/services/navbar/navbar.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MyNotifierService } from 'src/app/services/notifier/my-notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  readonly notifier: MyNotifierService;\r\n  protected user: User;\r\n  protected visit: Visit;\r\n  protected doctor: Doctor;\r\n  protected isLoggedIn;\r\n  protected visitsForUser = new Array<Visit>();\r\n  private visitIdToDelte: number;\r\n  subscription: Subscription;\r\n\r\n  constructor(private navbarService: NavbarService, private visitService: VisitService, private userService: UserService,\r\n    private notifierService: MyNotifierService, private modalService: ModalService) {\r\n    this.notifier = this.notifierService;\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n  test() {\r\n    this.isLoggedIn = true;\r\n  }\r\n  ngOnInit() {\r\n    this.isLoggedIn = false;\r\n    this.subscription = this.userService.getLogedUser().subscribe(res => {\r\n      this.user = res;\r\n    })\r\n    this.getVisit();\r\n\r\n  }\r\n\r\n  getVisit() {\r\n    this.visitService.getVisitsByUserId(this.user.id).subscribe(res => {\r\n      res.forEach(vis => {\r\n        this.visitsForUser.push(vis);\r\n      })\r\n    })\r\n  }\r\n  deleteVisitClick(visitId) {\r\n    this.openModal('confirm-modal');\r\n    this.visitIdToDelte = visitId;\r\n  }\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n  closeModal(event) {\r\n    var target = event.target || event.srcElement || event.currentTarget;\r\n    var idAttr = target.attributes.id.nodeValue;\r\n    if (idAttr === 'yes') {\r\n      this.deleteVisit(this.visitIdToDelte);\r\n    }\r\n    this.modalService.close('confirm-modal');\r\n\r\n  }\r\n  deleteVisit(visitId: number) {\r\n    this.visitService.deleteVisist(visitId).subscribe(res => {\r\n      this.visitsForUser = this.visitsForUser.filter(item => item.id !== visitId);\r\n      this.notifier.showNotifer(\"success\", res.body);\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.status === 400) {\r\n          this.notifier.showNotifer(\"error\", err.error);\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \".login-form {\\r\\n    width: 340px;\\r\\n    margin: 50px auto;\\r\\n}\\r\\n.login-form form {\\r\\n    margin-bottom: 15px;\\r\\n    background: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n    padding: 30px;\\r\\n}\\r\\n.login-form h2 {\\r\\n    margin: 0 0 15px;\\r\\n}\\r\\n.form-control, .btn {\\r\\n    min-height: 38px;\\r\\n    border-radius: 2px;\\r\\n}\\r\\n.btn {        \\r\\n    font-size: 15px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQiwwQ0FBMEM7SUFDMUMsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm0ge1xyXG4gICAgd2lkdGg6IDM0MHB4O1xyXG4gICAgbWFyZ2luOiA1MHB4IGF1dG87XHJcbn1cclxuLmxvZ2luLWZvcm0gZm9ybSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgYmFja2dyb3VuZDogI2Y3ZjdmNztcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIHBhZGRpbmc6IDMwcHg7XHJcbn1cclxuLmxvZ2luLWZvcm0gaDIge1xyXG4gICAgbWFyZ2luOiAwIDAgMTVweDtcclxufVxyXG4uZm9ybS1jb250cm9sLCAuYnRuIHtcclxuICAgIG1pbi1oZWlnaHQ6IDM4cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbn1cclxuLmJ0biB7ICAgICAgICBcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { OauthService } from 'src/app/services/oauth/oauth.service';\r\nimport { NavbarService } from 'src/app/services/navbar/navbar.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  protected validateForm: FormGroup;\r\n  protected invalidLogin: boolean = false;\r\n  protected submitted = false;\r\n  protected oauthError: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private userService: UserService, private navbarService: NavbarService,\r\n    private http: UserService, private oauthService: OauthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    window.sessionStorage.removeItem('token');\r\n    this.validateForm = this.formBuilder.group({\r\n      pesel: ['', [Validators.required, Validators.minLength(11)]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.validateForm.invalid) {\r\n      return;\r\n    }\r\n    const body = new HttpParams()\r\n      .set('username', this.fields.pesel.value)\r\n      .set('password', this.fields.password.value)\r\n      .set('grant_type', 'password');\r\n\r\n    this.userService.login(body.toString()).subscribe(data => {\r\n      this.oauthService.setToken(data);\r\n      this.http.getByPesel(this.fields.pesel.value).subscribe(res => {\r\n        this.userService.addUser(res);\r\n        this.loginUser();\r\n        this.router.navigate(['home']);\r\n      })\r\n\r\n    }, err => {\r\n      if (err.error.error_description = 'Bad credentials') {\r\n        this.oauthError = 'Invalid login or password'\r\n      }\r\n      console.log(err.error);\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get fields() { return this.validateForm.controls; }\r\n\r\n  getClass(errorState: boolean, controlName: AbstractControl) {\r\n    var className = '';\r\n    if (controlName.value != null && !errorState && controlName.value.length > 0) {\r\n      className = 'form-control is-valid';\r\n    } else if (errorState) {\r\n      className = 'is-invalid';\r\n    } else {\r\n      className = 'form-control';\r\n    }\r\n    return className;\r\n  }\r\n\r\n  loginUser() {\r\n    this.navbarService.updateNavAfterAuth('user');\r\n    this.navbarService.updateLoginStatus(true);\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MyNotifierService } from 'src/app/services/notifier/my-notifier.service';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { MustMatch } from 'src/app/shared/utils/passwordMatcher';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  readonly notifier: MyNotifierService;\r\n  protected user = new User();\r\n  protected confirmPass: string;\r\n  protected validateForm: FormGroup;\r\n  protected submitted = false;\r\n  protected error: string;\r\n  protected peselPattern ='\\\\d+'\r\n\r\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private router: Router, private notiferService: MyNotifierService) {\r\n    this.notifier = notiferService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validateForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n      pesel: ['', [Validators.required, Validators.minLength(11)]],\r\n      phone: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get fields() { return this.validateForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    //stop here if form is invalid\r\n    if (this.validateForm.invalid) {\r\n      return;\r\n    }\r\n    this.userService.register(this.user).subscribe(res => {\r\n      console.log(res.body);\r\n      this.router.navigate(['/login']).then(() => {\r\n        this.notifier.showNotifer(\"success\", res.body);\r\n      });\r\n\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.status === 400) {\r\n          this.error = err.error;\r\n          this.notifier.showNotifer(\"error\", this.error);\r\n\r\n          // activate the error message\r\n          this.fields.pesel.setErrors({\r\n            serverError: this.error\r\n          });\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  getClass(errorState: boolean, controlName: AbstractControl) {\r\n    var className = '';\r\n    if (controlName.value != null && !errorState && controlName.value.length > 0) {\r\n      className = 'form-control is-valid';\r\n    } else if (errorState) {\r\n      className = 'is-invalid';\r\n    } else {\r\n      className = 'form-control';\r\n    }\r\n    return className;\r\n  }\r\n\r\n}\r\n","export default \".modal-body .form-horizontal .col-sm-2,\\r\\n.modal-body .form-horizontal .col-sm-10 {\\r\\n    width: 100%\\r\\n}\\r\\n\\r\\n.modal-body .form-horizontal .control-label {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.modal-body .form-horizontal .col-sm-offset-2 {\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n::ng-deep .cdk-overlay-container{\\r\\n    z-index: 1200 !important;\\r\\n}\\r\\n\\r\\n.input-group.mb-3 {\\r\\n    margin-top:7px;\\r\\n}\\r\\n\\r\\n.greenText{ \\r\\n    color:green;\\r\\n    font-weight: bold;\\r\\n }\\r\\n\\r\\n.label {\\r\\n    color:green;\\r\\n    font-size: small;\\r\\n }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91cGRhdGUtdmlzaXQvdXBkYXRlLXZpc2l0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUk7QUFDSjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFDQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0NBQ3BCOztBQUNBO0lBQ0csV0FBVztJQUNYLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXBkYXRlLXZpc2l0L3VwZGF0ZS12aXNpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLWJvZHkgLmZvcm0taG9yaXpvbnRhbCAuY29sLXNtLTIsXHJcbi5tb2RhbC1ib2R5IC5mb3JtLWhvcml6b250YWwgLmNvbC1zbS0xMCB7XHJcbiAgICB3aWR0aDogMTAwJVxyXG59XHJcblxyXG4ubW9kYWwtYm9keSAuZm9ybS1ob3Jpem9udGFsIC5jb250cm9sLWxhYmVsIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuLm1vZGFsLWJvZHkgLmZvcm0taG9yaXpvbnRhbCAuY29sLXNtLW9mZnNldC0yIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG59XHJcbjo6bmctZGVlcCAuY2RrLW92ZXJsYXktY29udGFpbmVye1xyXG4gICAgei1pbmRleDogMTIwMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uaW5wdXQtZ3JvdXAubWItMyB7XHJcbiAgICBtYXJnaW4tdG9wOjdweDtcclxufVxyXG5cclxuLmdyZWVuVGV4dHsgXHJcbiAgICBjb2xvcjpncmVlbjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gfVxyXG4gLmxhYmVsIHtcclxuICAgIGNvbG9yOmdyZWVuO1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxuIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Visit } from 'src/app/shared/models/visit.model';\r\nimport { Doctor } from 'src/app/shared/models/doctor.model';\r\nimport { DoctorService } from 'src/app/services/doctor/doctor.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { VisitService } from 'src/app/services/visit/visit.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MyNotifierService } from 'src/app/services/notifier/my-notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-update-visit',\r\n  templateUrl: './update-visit.component.html',\r\n  styleUrls: ['./update-visit.component.css']\r\n})\r\nexport class UpdateVisitComponent implements OnInit {\r\n\r\n  protected form: FormGroup;\r\n  readonly notifier: MyNotifierService;\r\n  protected visitObj: Visit;\r\n  protected doctors = new Array<Doctor>();\r\n  protected actualDoctorId: number;\r\n  protected actualDoctor = new Doctor();\r\n  protected actualHourVisit: string;\r\n  protected visitDate: Date;\r\n  protected visitHour = [\r\n    { hour: \"7.00\" },\r\n    { hour: \"8.30\" },\r\n    { hour: \"9.30\" },\r\n    { hour: \"11.00\" },\r\n    { hour: \"13.00\" }\r\n  ]\r\n\r\n  constructor(private doctorService: DoctorService, private datePipe: DatePipe, private visitService: VisitService,\r\n    private router: Router, private notiferService: MyNotifierService) {\r\n    this.notifier = this.notiferService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visitObj = new Visit();\r\n    this.form = new FormGroup({\r\n      doctor: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  updateVisit(visit) {\r\n    if (this.doctors.length === 0) {\r\n      this.doctorService.getDoctors().subscribe(results => {\r\n        results.forEach(doctor => {\r\n          this.doctors.push(doctor);\r\n        })\r\n      })\r\n    }\r\n    this.visitObj = visit;\r\n    this.actualDoctor = visit.doctorDTO;\r\n    this.form.controls['doctor'].setValue(this.actualDoctor);\r\n    this.actualDoctorId = visit.doctorDTO.id;\r\n    this.actualHourVisit = visit.visitHour;\r\n    this.visitDate = new Date(this.datePipe.transform(visit.visitDate, 'MM/dd/yyyy'));\r\n\r\n  }\r\n\r\n  updateVisitForm() {\r\n    this.visitObj.visitDate = this.datePipe.transform(this.visitDate, 'yyyy-MM-dd').toString();\r\n    this.visitObj.registrationDate = this.datePipe.transform(new Date, 'yyyy-MM-dd').toString();\r\n    this.visitObj.doctorDTO = this.form.controls.doctor.value;\r\n    this.visitService.updateVisit(this.visitObj).subscribe(res => {\r\n      this.router.navigate(['/home']).then(() => {\r\n        this.notifier.showNotifer(\"success\", res.body);\r\n      })\r\n    })\r\n  }\r\n  compareFn = (a, b) => a.id === b.id;\r\n  \r\n  closeModal() {\r\n    //this.visit = new Visit();\r\n  }\r\n}\r\n","export default \".greenText{ \\r\\n    color:green;\\r\\n    font-weight: bold;\\r\\n    margin-left: 10px;\\r\\n }\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyLWFjY291bnQvdXNlci1hY2NvdW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1hY2NvdW50L3VzZXItYWNjb3VudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyZWVuVGV4dHsgXHJcbiAgICBjb2xvcjpncmVlbjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiB9XHJcblxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { Address } from 'src/app/shared/models/address.model';\r\nimport { AddressService } from 'src/app/services/address/address.service';\r\nimport { MyNotifierService } from 'src/app/services/notifier/my-notifier.service';\r\n\r\n@Component({\r\n  selector: 'app-user-account',\r\n  templateUrl: './user-account.component.html',\r\n  styleUrls: ['./user-account.component.css']\r\n})\r\nexport class UserAccountComponent implements OnInit {\r\n\r\n  protected validateForm: FormGroup;\r\n  readonly notifier: MyNotifierService;\r\n  protected user = new User();\r\n  protected address = new Address();\r\n  protected addressCopied: Address;\r\n  protected usserCoppied: User;\r\n  protected submitted = false;\r\n  protected isDisabled = true;\r\n  protected updateAddress = false;\r\n  protected updateUser = false;\r\n  protected validAddressFields = [\r\n    { checked: true },\r\n    { checked: true },\r\n    { checked: true },\r\n  ]\r\n  protected validUserFields = [\r\n    { checked: true },\r\n    { checked: true },\r\n    { checked: true },\r\n    { checked: true },\r\n    { checked: true },\r\n    { checked: true },\r\n  ]\r\n  protected nameHidden;\r\n  protected streetCounter = 0;\r\n  protected districtCounter = 0;\r\n  protected postalCodeCounter = 0;\r\n\r\n  protected nameCounter = 0;\r\n  protected surnameCounter = 0;\r\n  protected peselCounter = 0;\r\n  protected phoneCounter = 0;\r\n  protected emailConuter = 0;\r\n  protected passwordCounter = 0;\r\n\r\n  constructor(private formBuilder: FormBuilder, private addressService: AddressService, private userService: UserService, private notiferService: MyNotifierService) {\r\n    this.notifier = notiferService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validateForm = this.formBuilder.group({\r\n      nameInfo: ['', Validators.required],\r\n      surnameInfo: ['', Validators.required],\r\n      peselInfo: ['', [Validators.required, Validators.minLength(11)]],\r\n      phoneInfo: ['', Validators.required],\r\n      emailInfo: ['', [Validators.required, Validators.email]],\r\n      passwordInfo: ['', [Validators.required, Validators.minLength(6)]],\r\n      cityInfo: ['', Validators.required],\r\n      streetInfo: ['', Validators.required],\r\n      postalCodeInfo: ['', Validators.required],\r\n    });\r\n\r\n    this.userService.getLogedUser().subscribe(res => {\r\n      console.log(res);\r\n      this.user = res;\r\n      this.usserCoppied = Object.assign({}, res);\r\n    });\r\n\r\n    this.addressService.getAddressByUserId(this.user.id).subscribe(res => {\r\n      if (res != null) {\r\n        this.address = res;\r\n        this.addressCopied = Object.assign({}, res);\r\n      }\r\n    })\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get fields() { return this.validateForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.validateForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.updateUser) {\r\n      this.userService.updateUser(this.user).subscribe(res => {\r\n        this.notiferService.showNotifer(\"success\", res.body)\r\n      })\r\n    }\r\n\r\n    if (this.updateAddress) {\r\n      this.address.userDTO = this.user;\r\n      this.addressService.updateUserAddress(this.address).subscribe(res => {\r\n        this.addressCopied = Object.assign({}, this.address);\r\n        this.notiferService.showNotifer(\"success\", res.body)\r\n      })\r\n    }\r\n\r\n    this.validUserFields.forEach(item => {\r\n      item.checked = true;\r\n    })\r\n    this.isDisabled = true;\r\n\r\n    this.validAddressFields.forEach(item => {\r\n      item.checked = true;\r\n    })\r\n    this.isDisabled = true;\r\n  }\r\n\r\n  onSearchChange(searchValue): void {\r\n    if (searchValue.attributes.formControlName.nodeValue === 'streetInfo') {\r\n      this.streetCounter = this.compareValues(this.addressCopied.street, searchValue.value, this.streetCounter);\r\n      if (this.streetCounter > 0) {\r\n        this.validAddressFields[0] = { checked: false };\r\n      } else {\r\n        this.validAddressFields[0] = { checked: true };\r\n      }\r\n    } else if (searchValue.attributes.formControlName.nodeValue === 'cityInfo') {\r\n      this.districtCounter = this.compareValues(this.addressCopied.city, searchValue.value, this.districtCounter);\r\n      if (this.districtCounter > 0) {\r\n        this.validAddressFields[1] = { checked: false };\r\n      } else {\r\n        this.validAddressFields[1] = { checked: true };\r\n      }\r\n    } else if (searchValue.attributes.formControlName.nodeValue === 'postalCodeInfo') {\r\n      this.postalCodeCounter = this.compareValues(this.addressCopied.postalCode, searchValue.value, this.postalCodeCounter);\r\n      if (this.postalCodeCounter > 0) {\r\n        this.validAddressFields[2] = { checked: false };\r\n      } else {\r\n        this.validAddressFields[2] = { checked: true };\r\n      }\r\n    }\r\n    else if (searchValue.attributes.formControlName.nodeValue === 'nameInfo') {\r\n      this.nameCounter = this.compareValues(this.usserCoppied.name, searchValue.value, this.nameCounter);\r\n      if (this.nameCounter > 0) {\r\n        this.validUserFields[0] = { checked: false };\r\n      } else {\r\n        this.validUserFields[0] = { checked: true };\r\n      }\r\n    } else if (searchValue.attributes.formControlName.nodeValue === 'surnameInfo') {\r\n      this.surnameCounter = this.compareValues(this.usserCoppied.surname, searchValue.value, this.surnameCounter);\r\n      if (this.surnameCounter > 0) {\r\n        this.validUserFields[1] = { checked: false };\r\n      } else {\r\n        this.validUserFields[1] = { checked: true };\r\n      }\r\n    }\r\n    else if (searchValue.attributes.formControlName.nodeValue === 'peselInfo') {\r\n      this.peselCounter = this.compareValues(this.usserCoppied.pesel, searchValue.value, this.peselCounter);\r\n      if (this.peselCounter > 0) {\r\n        this.validUserFields[2] = { checked: false };\r\n      } else {\r\n        this.validUserFields[2] = { checked: true };\r\n      }\r\n    } else if (searchValue.attributes.formControlName.nodeValue === 'phoneInfo') {\r\n      this.phoneCounter = this.compareValues(this.usserCoppied.phoneNumber, searchValue.value, this.phoneCounter);\r\n      if (this.phoneCounter > 0) {\r\n        this.validUserFields[3] = { checked: false };\r\n      } else {\r\n        this.validUserFields[3] = { checked: true };\r\n      }\r\n    }\r\n    else if (searchValue.attributes.formControlName.nodeValue === 'emailInfo') {\r\n      this.emailConuter = this.compareValues(this.usserCoppied.email, searchValue.value, this.emailConuter);\r\n      if (this.emailConuter > 0) {\r\n        this.validUserFields[4] = { checked: false };\r\n      } else {\r\n        this.validUserFields[4] = { checked: true };\r\n      }\r\n    } else if (searchValue.attributes.formControlName.nodeValue === 'passwordInfo') {\r\n      this.passwordCounter = this.compareValues(this.usserCoppied.password, searchValue.value, this.passwordCounter);\r\n      if (this.passwordCounter > 0) {\r\n        this.validUserFields[5] = { checked: false };\r\n      } else {\r\n        this.validUserFields[5] = { checked: true };\r\n      }\r\n    }\r\n    let statusButton = true;\r\n    for (var i = 0; i < this.validUserFields.length; i++) {\r\n      if (this.validUserFields[i].checked === false) {\r\n        statusButton = this.isDisabled = false;\r\n        this.updateUser = true;\r\n        break;\r\n      } else {\r\n        this.isDisabled = true;\r\n      }\r\n    }\r\n    for (var i = 0; i < this.validAddressFields.length; i++) {\r\n      if (this.validAddressFields[i].checked === false) {\r\n        this.isDisabled = false;\r\n        this.updateAddress = true;\r\n        break;\r\n      } else {\r\n        this.isDisabled = statusButton;\r\n      }\r\n    }\r\n  }\r\n\r\n  compareValues(oryginalValue: string, newValue: string, counterForControl: number): number {\r\n    if (oryginalValue !== newValue) {\r\n      if (counterForControl === 0 || counterForControl > 0) {\r\n        return 1;\r\n      }\r\n    } else {\r\n      if (counterForControl === 1 || counterForControl < 1) {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".modal-body .form-horizontal .col-sm-2,\\r\\n.modal-body .form-horizontal .col-sm-10 {\\r\\n    width: 100%\\r\\n}\\r\\n\\r\\n.modal-body .form-horizontal .control-label {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.modal-body .form-horizontal .col-sm-offset-2 {\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy92aXNpdC1kZXRhaWxzL3Zpc2l0LWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSTtBQUNKOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy92aXNpdC1kZXRhaWxzL3Zpc2l0LWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC1ib2R5IC5mb3JtLWhvcml6b250YWwgLmNvbC1zbS0yLFxyXG4ubW9kYWwtYm9keSAuZm9ybS1ob3Jpem9udGFsIC5jb2wtc20tMTAge1xyXG4gICAgd2lkdGg6IDEwMCVcclxufVxyXG5cclxuLm1vZGFsLWJvZHkgLmZvcm0taG9yaXpvbnRhbCAuY29udHJvbC1sYWJlbCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbi5tb2RhbC1ib2R5IC5mb3JtLWhvcml6b250YWwgLmNvbC1zbS1vZmZzZXQtMiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Visit } from 'src/app/shared/models/visit.model';\r\n\r\n@Component({\r\n  selector: 'app-visit-details',\r\n  templateUrl: './visit-details.component.html',\r\n  styleUrls: ['./visit-details.component.css']\r\n})\r\nexport class VisitDetailsModalComponent implements OnInit {\r\n\r\n  protected visit: Visit;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openVisitDetails(visit) {\r\n    this.visit = visit;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Address } from 'src/app/shared/models/address.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n\r\n  readonly URL_DB = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateUserAddress(address: Address) {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.put(this.URL_DB + 'updateAddress', JSON.stringify(address),\r\n      {\r\n        headers: httpHeaders,\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }\r\n    ).pipe(\r\n      map((data: any) => {\r\n        return data;\r\n      })\r\n    )\r\n  }\r\n\r\n  getAddressByUserId(userId: number): Observable<Address> {\r\n    return this.http.get<Address>(this.URL_DB + \"address/\" + userId);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Doctor } from 'src/app/shared/models/doctor.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorService {\r\n\r\n  readonly URL_DB = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDoctors(): Observable<Array<Doctor>> {\r\n    return this.http.get<Array<Doctor>>(this.URL_DB + 'doctors');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    return throwError(error);\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    return next.handle(req)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n  private modals: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  add(modal: any) {\r\n    // add modal to array of active modals\r\n    this.modals.push(modal);\r\n  }\r\n\r\n  remove(id: string) {\r\n    // remove modal from array of active modals\r\n    this.modals = this.modals.filter(x => x.id !== id);\r\n  }\r\n  open(id: string) {\r\n    // open modal specified by id\r\n    let modal: any = this.modals.filter(x => x.id === id)[0];\r\n    modal.open();\r\n  }\r\n\r\n  close(id: string) {\r\n    // close modal specified by id\r\n    let modal: any = this.modals.filter(x => x.id === id)[0];\r\n    modal.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavbarService {\r\n\r\n  private links = new Array<{ text: string, path: string }>();\r\n  private isLoggedIn = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor() {\r\n    this.addItem({ text: 'Sign in', path: 'login' });\r\n    this.addItem({ text: 'Create an Account', path: 'registration' });\r\n    //this.isLoggedIn.next(false);\r\n  }\r\n  getLinks() {\r\n    return this.links;\r\n  }\r\n\r\n  getLoginStatus(): Observable<boolean> {\r\n    return this.isLoggedIn;\r\n  }\r\n  addItem({ text, path }) {\r\n    this.links.push({ text: text, path: path });\r\n  }\r\n  updateLoginStatus(status: boolean) {\r\n    this.isLoggedIn.next(status);\r\n\r\n    if (!status) {\r\n      this.clearAllItems();\r\n      this.addItem({ text: 'Sign in', path: 'login' });\r\n      this.addItem({ text: 'Create an Account', path: 'registration' });\r\n    }\r\n  }\r\n  updateNavAfterAuth(role: string): void {\r\n    this.removeItem({ text: 'Sign in' });\r\n    this.removeItem({ text: 'Create an Account' });\r\n\r\n    if (role === 'user') {\r\n      this.addItem({ text: 'Add Appointment', path: 'addVisit' });\r\n      this.addItem({ text: 'Visits', path: 'home' });\r\n    }\r\n  }\r\n  removeItem({ text }) {\r\n    this.links.forEach((link, index) => {\r\n      if (link.text === text) {\r\n        this.links.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearAllItems() {\r\n    this.links.length = 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyNotifierService {\r\n\r\n  /**\r\n    * Notifier service\r\n    */\r\n  private notifier: NotifierService;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {NotifierService} notifier Notifier service\r\n\t */\r\n  public constructor(notifier: NotifierService) {\r\n    this.notifier = notifier;\r\n  }\r\n\r\n  private configuration(): void {\r\n\r\n  }\r\n  showNotifer(type: string, message: string) {\r\n    this.showNotification(type, message);\r\n  }\r\n\t/**\r\n\t * Show a notification\r\n\t *\r\n\t * @param {string} type    Notification type\r\n\t * @param {string} message Notification message\r\n\t */\r\n  public showNotification(type: string, message: string): void {\r\n    this.notifier.notify(type, message);\r\n  }\r\n\r\n\t/**\r\n\t * Hide oldest notification\r\n\t */\r\n  public hideOldestNotification(): void {\r\n    this.notifier.hideOldest();\r\n  }\r\n\r\n\t/**\r\n\t * Hide newest notification\r\n\t */\r\n  public hideNewestNotification(): void {\r\n    this.notifier.hideNewest();\r\n  }\r\n\r\n\t/**\r\n\t * Hide all notifications at once\r\n\t */\r\n  public hideAllNotifications(): void {\r\n    this.notifier.hideAll();\r\n  }\r\n\r\n\t/**\r\n\t * Show a specific notification (with a custom notification ID)\r\n\t *\r\n\t * @param {string} type    Notification type\r\n\t * @param {string} message Notification message\r\n\t * @param {string} id      Notification ID\r\n\t */\r\n  public showSpecificNotification(type: string, message: string, id: string): void {\r\n    this.notifier.show({\r\n      id,\r\n      message,\r\n      type\r\n    });\r\n  }\r\n\r\n\t/**\r\n\t * Hide a specific notification (by a given notification ID)\r\n\t *\r\n\t * @param {string} id Notification ID\r\n\t */\r\n  public hideSpecificNotification(id: string): void {\r\n    this.notifier.hide(id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OauthService {\r\n\r\n  private token: Object;\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem('token');\r\n  }\r\n\r\n  public setToken(token: Object) {\r\n    this.token = token;\r\n    return sessionStorage.setItem('token', token.toString());\r\n  }\r\n\r\n  public getAccessToken(): string {\r\n    return this.token['access_token'];\r\n  }\r\n\r\n  public getRefreshToken(): string {\r\n    return this.token['refresh_token'];\r\n  }\r\n\r\n  public clearToken() {\r\n    return sessionStorage.clear();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { OauthService } from 'src/app/services/oauth/oauth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public oauth: OauthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.oauth.getToken() != null) {\r\n            let header = 'Bearer ' + this.oauth.getAccessToken();\r\n\r\n            let headers = request.headers\r\n                .set('Authorization', header);\r\n            request = request.clone({ headers });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { MyNotifierService } from '../notifier/my-notifier.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  readonly notifier: MyNotifierService;\r\n  readonly URL_DB = 'http://localhost:8080/';\r\n  private userBeh = new BehaviorSubject<User>(new User);\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  login(loginPayload) {\r\n    const headers = {\r\n      'Authorization': 'Basic ' + btoa(\"kmichali:$2y$12$6nzDzH9nWVbbcUYagcvdze7HRhUpTpVOLoL7Ksw8pyXml9yGJ.k1S\"),\r\n      'Content-type': 'application/x-www-form-urlencoded',\r\n      'Access-Control-Allow-Origin': \"*\"\r\n    }\r\n    return this.http.post(this.URL_DB + 'oauth/token', loginPayload, { headers })\r\n\r\n  }\r\n\r\n  register(user: User) {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.post(this.URL_DB + 'registration', JSON.stringify(user),\r\n      {\r\n        headers: httpHeaders,\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }\r\n    ).pipe(\r\n      map((data: any) => {\r\n        return data;\r\n      })\r\n    )\r\n  }\r\n\r\n  updateUser(user: User) {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.put(this.URL_DB + 'updateUser', JSON.stringify(user),\r\n      {\r\n        headers: httpHeaders,\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }\r\n    ).pipe(\r\n      map((data: any) => {\r\n        return data;\r\n      })\r\n    )\r\n  }\r\n\r\n  getAll(): Observable<Array<User>> {\r\n    return this.http.get<Array<User>>(this.URL_DB + \"users\");\r\n  }\r\n  getById(userId: string): Observable<User> {\r\n    return this.http.get<User>(this.URL_DB + \"user/\" + userId);\r\n  }\r\n  getByPesel(userPesel: string): Observable<User> {\r\n    return this.http.get<User>(this.URL_DB + \"user?pesel=\" + userPesel);\r\n  }\r\n  addUser(user: User) {\r\n    this.userBeh.next(user);\r\n  }\r\n\r\n  getLogedUser(): Observable<User> {\r\n    return this.userBeh.asObservable();\r\n  }\r\n  getLoggedUserPesel() {\r\n    return sessionStorage.getItem('user');\r\n  }\r\n  setLoggedUserPesel(user: User) {\r\n    return sessionStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Visit } from 'src/app/shared/models/visit.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VisitService {\r\n\r\n  readonly URL_DB = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getVisitsByUserId(userId: number): Observable<Array<Visit>> {\r\n    return this.http.get<Array<Visit>>(this.URL_DB + 'visits/' + userId)\r\n  }\r\n  addVisit(visit: Visit) {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.post(this.URL_DB + 'addVisit', JSON.stringify(visit),\r\n      {\r\n        headers: httpHeaders,\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }\r\n    ).pipe(\r\n      map((data: any) => {\r\n        return data;\r\n      })\r\n    )\r\n  }\r\n\r\n  updateVisit(visit: Visit) {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.put(this.URL_DB + 'updateVisit', JSON.stringify(visit),\r\n      {\r\n        headers: httpHeaders,\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }\r\n    ).pipe(\r\n      map((data: any) => {\r\n        return data;\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  deleteVisist(visitId: number) {\r\n    let httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.delete(this.URL_DB + 'deleteVisit/' + visitId,\r\n      {\r\n        headers: httpHeaders,\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }).pipe(\r\n        map((data: any) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, Renderer2, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appChecked]'\r\n})\r\nexport class CheckedDirective implements OnChanges  {\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // const element = this.el.nativeElement;\r\n    // this.renderer.setStyle(element,'list-style-image', 'url(assets/details.png)');\r\n    // this.renderer.setStyle(element, 'background', 'blue');\r\n    if(changes.input){\r\n      console.log('input changed');\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n/* MODAL STYLES\\r\\n-------------------------------*/\\r\\napp-common-modal {\\r\\n    /* modals are hidden by default */\\r\\n    display: none;\\r\\n}\\r\\n.app-common-modal {\\r\\n        /* modal container fixed across whole screen */\\r\\n        position: absolute ;\\r\\n        top: 50%;\\r\\n        right: 0;\\r\\n        bottom: 0;\\r\\n        left: 50%;\\r\\n        -webkit-transform: translate(-50%, -50%);\\r\\n                transform: translate(-50%, -50%);\\r\\n        width: 30%;\\r\\n        /* z-index must be higher than .jw-modal-background */\\r\\n        z-index: 1000;\\r\\n        \\r\\n        /* enables scrolling for tall modals */\\r\\n        overflow: auto;\\r\\n    }\\r\\n.app-common-modal-body {\\r\\n            border-radius: 10px !important; \\r\\n            padding: 20px;\\r\\n            background: #fff;\\r\\n\\r\\n            /* margin exposes part of the modal background */\\r\\n            margin: 40px;\\r\\n            \\r\\n        }\\r\\n.app-common-modal-background {\\r\\n        /* modal background fixed across whole screen */\\r\\n        position: fixed;\\r\\n        top: 0;\\r\\n        right: 0;\\r\\n        bottom: 0;\\r\\n        left: 0;\\r\\n\\r\\n        /* semi-transparent black  */\\r\\n        background-color: #000;\\r\\n        opacity: 0.75;\\r\\n        \\r\\n        /* z-index must be below .jw-modal and above everything else  */\\r\\n        z-index: 900;\\r\\n    }\\r\\nbody.app-common-modal-open {\\r\\n    /* body overflow is hidden to hide main scrollbar when modal window is open */\\r\\n    overflow: hidden;\\r\\n}\\r\\n.buttonProp {\\r\\n    margin-right: 20px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZGFsL2NvbW1vbi1tb2RhbC9jb21tb24tbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7Z0NBQ2dDO0FBQ2hDO0lBQ0ksaUNBQWlDO0lBQ2pDLGFBQWE7QUFDakI7QUFDSTtRQUNJLDhDQUE4QztRQUM5QyxtQkFBbUI7UUFDbkIsUUFBUTtRQUNSLFFBQVE7UUFDUixTQUFTO1FBQ1QsU0FBUztRQUNULHdDQUFnQztnQkFBaEMsZ0NBQWdDO1FBQ2hDLFVBQVU7UUFDVixxREFBcUQ7UUFDckQsYUFBYTs7UUFFYixzQ0FBc0M7UUFDdEMsY0FBYztJQUNsQjtBQUNJO1lBQ0ksOEJBQThCO1lBQzlCLGFBQWE7WUFDYixnQkFBZ0I7O1lBRWhCLGdEQUFnRDtZQUNoRCxZQUFZOztRQUVoQjtBQUdKO1FBQ0ksK0NBQStDO1FBQy9DLGVBQWU7UUFDZixNQUFNO1FBQ04sUUFBUTtRQUNSLFNBQVM7UUFDVCxPQUFPOztRQUVQLDRCQUE0QjtRQUM1QixzQkFBc0I7UUFDdEIsYUFBYTs7UUFFYiwrREFBK0Q7UUFDL0QsWUFBWTtJQUNoQjtBQUVKO0lBQ0ksNkVBQTZFO0lBQzdFLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksa0JBQWtCO0VBQ3BCIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL21vZGFsL2NvbW1vbi1tb2RhbC9jb21tb24tbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vKiBNT0RBTCBTVFlMRVNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbmFwcC1jb21tb24tbW9kYWwge1xyXG4gICAgLyogbW9kYWxzIGFyZSBoaWRkZW4gYnkgZGVmYXVsdCAqL1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4gICAgLmFwcC1jb21tb24tbW9kYWwge1xyXG4gICAgICAgIC8qIG1vZGFsIGNvbnRhaW5lciBmaXhlZCBhY3Jvc3Mgd2hvbGUgc2NyZWVuICovXHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlIDtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgIHdpZHRoOiAzMCU7XHJcbiAgICAgICAgLyogei1pbmRleCBtdXN0IGJlIGhpZ2hlciB0aGFuIC5qdy1tb2RhbC1iYWNrZ3JvdW5kICovXHJcbiAgICAgICAgei1pbmRleDogMTAwMDtcclxuICAgICAgICBcclxuICAgICAgICAvKiBlbmFibGVzIHNjcm9sbGluZyBmb3IgdGFsbCBtb2RhbHMgKi9cclxuICAgICAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIH1cclxuICAgICAgICAuYXBwLWNvbW1vbi1tb2RhbC1ib2R5IHtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweCAhaW1wb3J0YW50OyBcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuXHJcbiAgICAgICAgICAgIC8qIG1hcmdpbiBleHBvc2VzIHBhcnQgb2YgdGhlIG1vZGFsIGJhY2tncm91bmQgKi9cclxuICAgICAgICAgICAgbWFyZ2luOiA0MHB4O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICBcclxuXHJcbiAgICAuYXBwLWNvbW1vbi1tb2RhbC1iYWNrZ3JvdW5kIHtcclxuICAgICAgICAvKiBtb2RhbCBiYWNrZ3JvdW5kIGZpeGVkIGFjcm9zcyB3aG9sZSBzY3JlZW4gKi9cclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG5cclxuICAgICAgICAvKiBzZW1pLXRyYW5zcGFyZW50IGJsYWNrICAqL1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XHJcbiAgICAgICAgb3BhY2l0eTogMC43NTtcclxuICAgICAgICBcclxuICAgICAgICAvKiB6LWluZGV4IG11c3QgYmUgYmVsb3cgLmp3LW1vZGFsIGFuZCBhYm92ZSBldmVyeXRoaW5nIGVsc2UgICovXHJcbiAgICAgICAgei1pbmRleDogOTAwO1xyXG4gICAgfVxyXG5cclxuYm9keS5hcHAtY29tbW9uLW1vZGFsLW9wZW4ge1xyXG4gICAgLyogYm9keSBvdmVyZmxvdyBpcyBoaWRkZW4gdG8gaGlkZSBtYWluIHNjcm9sbGJhciB3aGVuIG1vZGFsIHdpbmRvdyBpcyBvcGVuICovXHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uYnV0dG9uUHJvcCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, Input, ElementRef, ViewEncapsulation } from '@angular/core';\r\nimport { ModalService } from 'src/app/services/modal/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-common-modal',\r\n  templateUrl: './common-modal.component.html',\r\n  styleUrls: ['./common-modal.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CommonModalComponent implements OnInit {\r\n\r\n  @Input() id: string;\r\n  private element: any;\r\n\r\n  constructor(private modalService: ModalService, private el: ElementRef) {\r\n    this.element = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // ensure id attribute exists\r\n    if (!this.id) {\r\n      console.error('modal must have an id');\r\n      return;\r\n    }\r\n\r\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n    document.body.appendChild(this.element);\r\n\r\n    // close modal on background click\r\n    this.element.addEventListener('click', el => {\r\n      if (el.target.className === 'app-common-modal') {\r\n        this.close();\r\n      }\r\n    });\r\n\r\n    // add self (this modal instance) to the modal service so it's accessible from controllers\r\n    this.modalService.add(this);\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.modalService.remove(this.id);\r\n    this.element.remove();\r\n  }\r\n\r\n  // open modal\r\n  open(): void {\r\n    this.element.style.display = 'block';\r\n    document.body.classList.add('app-common-open');\r\n  }\r\n\r\n  // close modal\r\n  close(): void {\r\n    this.element.style.display = 'none';\r\n    document.body.classList.remove('app-common-open');\r\n  }\r\n\r\n}\r\n","import { User } from './user.model';\r\n\r\nexport class Address {\r\n    id: number;\r\n\r\n    city: string;\r\n\r\n    postalCode: string;\r\n\r\n    street: string;  \r\n\r\n    userDTO: User;\r\n}","export class Doctor {\r\n    id: number;\r\n\r\n    name: string;\r\n\r\n    surname: string;\r\n\r\n    specialization: string;  \r\n\r\n    room: string;\r\n}","export class User {\r\n\r\n    id: number;\r\n\r\n    name: string;\r\n\r\n    surname: string;\r\n\r\n    pesel: string;\r\n\r\n    phoneNumber: string;\r\n\r\n    password: string;\r\n    \r\n    email: string;\r\n}","import { Doctor } from './doctor.model';\r\nimport { User } from './user.model';\r\n\r\nexport class Visit {\r\n\r\n    id: number;\r\n\r\n    visitDate: string;\r\n\r\n    visitHour: string;\r\n\r\n    registrationDate: string;\r\n\r\n    userDTO: User;\r\n    \r\n    doctorDTO: Doctor;\r\n}","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}